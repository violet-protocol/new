//@import "../../node_modules/mathsass/dist/math";

@function hex-to-dec($hex) {
  $numbers: "0" "1" "2" "3" "4" "5" "6" "7" "8" "9" "a" "b" "c" "d" "e" "f";

  // There's some weird behavior, I can't index into a length 1 string
  // processing backwards doesn't seem to work with the first char
  @if str-length($hex) == 1 {
    $hex: "0" + $hex;
  }
  $hex: "0" + $hex;

  $hex: quote(to-lower-case($hex));

  $result: 0;
  @for $i from 1 through str-length($hex) - 1 {
    $current-char: str-slice($hex, -$i, -$i);
    $current-digit: index($numbers, $current-char);
    @if not $current-digit {
      @warn "Unknown character `#{$current-char}` in `#{$hex}`.";
      @return false;
    }
    $current-digit: $current-digit - 1;
    $result: $result + $current-digit * pow(16, $i - 1);
  }

  @return $result;
}
