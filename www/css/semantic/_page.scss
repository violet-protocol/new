@use "../use" as *;

// PAGE ##

.page {
	&__outer {
		position: relative;
		display: flex;
		gap: 0;
		flex-direction: column;
		> * {
			flex: 0 0 auto;
		}
	}
	&__inner {
		position: relative;
		max-inline-size: $site-inline-size;
		inline-size: 100%;
		margin: auto;
		font-size: $fs0;
	}
	&-header {
		display: flex;
		align-items: flex-start;
		position: fixed;
		top: 0;
		z-index: z(fixed);
		inline-size: 100%;
		max-inline-size: $site-inline-size;
		margin: auto;
		padding: $u2;
		//	background-color: $brand--night;
		a {
			color: $white;
		}
	}
	&-brand {
		mix-blend-mode: difference;
		&__logo {
			//	opacity: 0.8;

			.logogram {
			}

			transform: rotate(-0.25turn) translateY(-18vw);
			@include mq(medium) {
				transform: rotate(0turn) translateY(0);
			}
			transform-origin: top right;
			@include mq(large) {
				transform: rotate(0turn) translateX(#{$f--12 * 1vw}) translateY(#{$f--12 * 2vh});
			}
			@include transition;
			transition-property: opacity transform;
			&:hover {
				opacity: 1;
			}
			use {
			}
			svg {
				@include transition;
				transition-property: inline-size block-size;
				//	@extend %svgshadow;
				color: $white;
				inline-size: div(100vw, 6);
				block-size: $u * 6;
				@include mq(medium) {
					inline-size: div(100vw, 10);
				}
				@include mq(large) {
					inline-size: $medium-width * div(1, 3);
				}
				object-fit: contain;
			}
		}
	}
	&-main {
		max-inline-size: $site-inline-size;
		margin: auto;
		//	min-height: 100vh;
	}
	&-menu {
		inline-size: 100%;
	}
	&-footer {
		margin: auto;
		padding: $u;
		position: fixed;
		inset-block-end: 0;
		inset-inline: 0;
		background-color: $brand--mute;
		@include normal--inverse;
		font-size: $fs-3;
		font-family: $font-family-brand;
		@include uppercase;
		@include transition;
		&:hover {
			background-color: $black;
		}
	}
}
